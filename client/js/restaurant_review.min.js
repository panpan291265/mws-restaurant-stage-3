function initalizeRestaurantReviewPage(){fetchDataFromURL((e,t,r)=>{if(e)return console.error(e),alert(e);if(!t)return e="initalizeRestaurantReviewPage: invalid restaurant object!",console.error(e),alert(e);{let e=!1;const n=document.getElementById("restaurant-title");r?n.innerText=`Î•dit review for '${t.name}'`:(e=!0,r=DBHelper.getNewReview(t),n.innerText=`Add a new review for '${t.name}'`);const a=document.querySelector(".review-fields-container #name");a.value=r.name,document.querySelector(".review-fields-container #rating").value=r.rating;const i=document.querySelector(".review-fields-container #comments");i.value=r.comments,document.querySelector("#review-form").onsubmit=(e=>{submitReview(e,t,r)}),setTimeout(()=>{e?a.focus():i.focus()},0)}})}navigator.serviceWorker&&navigator.serviceWorker.addEventListener("message",e=>{e.data&&"synchronize-data"===e.data.id&&DBHelper.synchronizeData().then(e=>{e&&initalizeRestaurantReviewPage()}).catch(e=>{console.error("Error synchronizing data:",e)})}),window.addEventListener("load",e=>{initalizeRestaurantReviewPage()}),fetchDataFromURL=(e=>{const t=UrlHelper.getParameterByName("restaurant_id");t?DBHelper.fetchRestaurantById(t,(r,n)=>{if(r)return e(r);if(!n)return e(`Restaurant with id '${t}' cound not be found!`);const a=UrlHelper.getParameterByName("review_id");if(!a)return e(null,n);DBHelper.fetchReviewById(a,(t,r)=>t?e(t,n):r?e(null,n,r):e(`Review with id '${a}' cound not be found!`,n))}):(error="No restaurant id in URL",e(error,null))}),submitReview=((e,t,r)=>{e.preventDefault(),e.stopPropagation();const n=document.querySelector(".review-fields-container #name"),a=document.querySelector(".review-fields-container #rating"),i=document.querySelector(".review-fields-container #comments");r.name=n.value,r.rating=parseInt(a.value),r.comments=i.value,r.updatedAt=new Date,DBHelper.saveReview(r).then(()=>{setTimeout(()=>{const e=DBHelper.urlForRestaurant(t);UrlHelper.goToUrl(e)},500)}).catch(e=>{alert(e)})});